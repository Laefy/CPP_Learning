<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Premiers programmes on Cours de C&#43;&#43; - Niveau Master</title>
    <link>https://laefy.github.io/CPP_Learning/chapter1/2-practice/</link>
    <description>Recent content in Premiers programmes on Cours de C&#43;&#43; - Niveau Master</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr</language>
    <atom:link href="https://laefy.github.io/CPP_Learning/chapter1/2-practice/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>üëã Hello World</title>
      <link>https://laefy.github.io/CPP_Learning/chapter1/2-practice/1-hello-world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://laefy.github.io/CPP_Learning/chapter1/2-practice/1-hello-world/</guid>
      <description>Pour votre premier programme, on ne va pas trop faire dans l&amp;rsquo;originalit√©, il s&amp;rsquo;agira d&amp;rsquo;un Hello World. Vous l&amp;rsquo;avez d&amp;rsquo;ailleurs d√©j√† probablement vu dans la rubrique pr√©c√©dente, pour tester vos outils.&#xA;Pour cet exercice, vous modifierez le fichier :&#xA;- chap-01/1-hello_world.cpp&#xA;La cible √† compiler est c1-1-hello_world.&#xA;La fonction main Tout d&amp;rsquo;abord, commen√ßons par √©crire la fonction qui est appel√©e lorsqu&amp;rsquo;on lance le programme. On parle de point d&amp;rsquo;entr√©e. Comme en C, cette fonction doit s&amp;rsquo;appeler main et renvoyer une valeur de type int.</description>
    </item>
    <item>
      <title>ü¶ú Perroquet</title>
      <link>https://laefy.github.io/CPP_Learning/chapter1/2-practice/2-parrot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://laefy.github.io/CPP_Learning/chapter1/2-practice/2-parrot/</guid>
      <description>Vous allez maintenant impl√©menter un perroquet, qui r√©p√®te ce que vous dites dans la console.&#xA;Pour cet exercice, vous modifierez le fichier :&#xA;- chap-01/2-parrot.cpp&#xA;La cible √† compiler est c1-2-parrot.&#xA;Lire un entier Commencez par √©crire une fonction main qui ne fait rien, comme dans l&amp;rsquo;exercice pr√©c√©dent. Compilez et ex√©cutez le programme, pour √™tre s√ªr que tout est bien configur√©.&#xA;Ensuite, vous allez d√©clarer une variable de type int. Cela se fait de la m√™me mani√®re qu&amp;rsquo;en C.</description>
    </item>
    <item>
      <title>üî¢ Tableau Num√©rique</title>
      <link>https://laefy.github.io/CPP_Learning/chapter1/2-practice/3-array/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://laefy.github.io/CPP_Learning/chapter1/2-practice/3-array/</guid>
      <description>Le but de cet exercice est de voir comment manipuler les tableaux en C++ et passer des arguments au programme. Votre objectif sera d&amp;rsquo;afficher un tableau de nombres, dont la taille sera d√©finie par les param√®tres pass√©s au programme.&#xA;Pour cet exercice, vous modifierez le fichier :&#xA;- chap-01/3-array.cpp&#xA;La cible √† compiler est c1-3-array.&#xA;Tableau statique Le code initial de l&amp;rsquo;exercice vous est fourni. Le voici :&#xA;#include &amp;lt;iostream&amp;gt; int main() { int array[] = { 0, 1, 2, 3 }; for (int i = 0; i &amp;lt; 4; ++i) { std::cout &amp;lt;&amp;lt; array[i] &amp;lt;&amp;lt; std::endl; } return 0; } Ce programme permet d&amp;rsquo;instancier un tableau d&amp;rsquo;entiers contenant les valeurs 0, 1, 2 et 3, et d&amp;rsquo;afficher ses valeurs.</description>
    </item>
    <item>
      <title>üßÆ Calculette</title>
      <link>https://laefy.github.io/CPP_Learning/chapter1/2-practice/4-calculator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://laefy.github.io/CPP_Learning/chapter1/2-practice/4-calculator/</guid>
      <description>Dans cet exercice, vous refactoriserez le code d&amp;rsquo;une mini-calculette. Cela sera l&amp;rsquo;occasion de voir l&amp;rsquo;instruction switch, les fonctions et le passage de param√®tres par r√©f√©rence.&#xA;Pour cet exercice, vous modifierez le fichier :&#xA;- chap-01/4-calculator.cpp&#xA;La cible √† compiler est c1-4-calculator.&#xA;Comprendre le code existant Commen√ßons par parcourir le code fourni, afin de comprendre ce qu&amp;rsquo;il s&amp;rsquo;y passe.&#xA;int main(int argc, char** argv) { // Parsing program parameters. some code... // Process operation, depending on the operator.</description>
    </item>
  </channel>
</rss>
